from aiogram import types

from bot.database.models.groups import Groups
from bot.keyboards import get_menu_key, get_fast_post_choose_channel_key, get_fast_post_thread_id_key, button_menu
from bot.service.redis_serv.user import set_msg_to_delete


async def start_message(message: types.Message):

    await message.answer(
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=get_menu_key()
    )


async def choose_channel_message(
        message: types.Message,
        groups: list[Groups]
):

    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ—Å—Ç–∞üëá",
        reply_markup=get_fast_post_choose_channel_key(groups)
    )


async def ask_thread_id_message(
        message: types.Message
):

    await message.answer(
        text="–ü–æ—Å—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é —Ç–µ–º—É?",
        reply_markup=get_fast_post_thread_id_key()
    )


async def get_thread_id_message(
        message: types.Message
):

    mes_ = await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID —Ç–µ–º—ã.",
        reply_markup=button_menu()
    )

    # await set_msg_to_delete(
    #     user_id=message.from_user.id,
    #     message_id=mes_.message_id
    # )


async def get_template_message(message: types.Message):

    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Å—Ç.",
        reply_markup=button_menu()
    )

async def get_time_public_post_message(message: types.Message):

    await message.answer(
        text="–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç?",
        reply_markup=...
    )


